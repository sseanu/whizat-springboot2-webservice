buildscript {
    // build.gradle에서 사용할 전역변수 설정
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }
    // 의존성들을 어떤 원격 저장소에서 받을지
    // jcenter는 직접 만든 라이브러리 업로드가 간단하고, mavenCentral에 자동으로 업로드할 수 있게 할 수 있어서  많이 사용
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

// 자바와 스프링 부트를 사용하기 위한 필수 플러그인들, 항상 추가
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management' // 스프링 부트의 의존성들을 관리해 주는 플러그인, 반드시 추가

group 'com.whizat.study'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

// 프로젝트 개발에 필요한 의존성 선언
// 버전을 명시하지 않아야 맨위의 "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}" 의 버전을 따라감
dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.projectlombok:lombok')
    // 스프링 부트용 Spring Data Jpa 추상화 라이브러리
    // 스프링 부트 버전에 맞춰 자동으로 JPA 관련 라이브러리들의 버전을 관리해 줌
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    // 인메모리 관계형 데이터베이스
    // 별도의 설치가 필요 없이 프로젝트 의존성만으로 관리 가능
    // 메모리에서 실행되기 때문에 애플리케이션을 재시작할 때마다 초기화된다는 점을 이용하여 테스트용으로 많이 씀
    compile('com.h2database:h2')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}